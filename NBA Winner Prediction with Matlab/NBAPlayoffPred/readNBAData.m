function teamBoxScore = readNBAData(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   TEAMBOXSCORE = IMPORTFILE(FILENAME) Reads data from text file FILENAME
%   for the default selection.
%
%   TEAMBOXSCORE = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   teamBoxScore = importfile('2012-18_teamBoxScore.csv', 2, 14759);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/01/27 16:57:14

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: datetimes (%{yyyy-MM-dd}D)
%	column2: datetimes (%{HH:mm}D)
%   column3: categorical (%C)
%	column4: categorical (%C)
%   column5: categorical (%C)
%	column6: categorical (%C)
%   column7: categorical (%C)
%	column8: categorical (%C)
%   column9: categorical (%C)
%	column10: categorical (%C)
%   column11: categorical (%C)
%	column12: categorical (%C)
%   column13: categorical (%C)
%	column14: categorical (%C)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
%	column46: double (%f)
%   column47: double (%f)
%	column48: double (%f)
%   column49: double (%f)
%	column50: double (%f)
%   column51: double (%f)
%	column52: double (%f)
%   column53: double (%f)
%	column54: double (%f)
%   column55: double (%f)
%	column56: double (%f)
%   column57: double (%f)
%	column58: double (%f)
%   column59: double (%f)
%	column60: double (%f)
%   column61: double (%f)
%	column62: double (%f)
%   column63: double (%f)
%	column64: double (%f)
%   column65: double (%f)
%	column66: categorical (%C)
%   column67: categorical (%C)
%	column68: categorical (%C)
%   column69: categorical (%C)
%	column70: categorical (%C)
%   column71: double (%f)
%	column72: double (%f)
%   column73: double (%f)
%	column74: double (%f)
%   column75: double (%f)
%	column76: double (%f)
%   column77: double (%f)
%	column78: double (%f)
%   column79: double (%f)
%	column80: double (%f)
%   column81: double (%f)
%	column82: double (%f)
%   column83: double (%f)
%	column84: double (%f)
%   column85: double (%f)
%	column86: double (%f)
%   column87: double (%f)
%	column88: double (%f)
%   column89: double (%f)
%	column90: double (%f)
%   column91: double (%f)
%	column92: double (%f)
%   column93: double (%f)
%	column94: double (%f)
%   column95: double (%f)
%	column96: double (%f)
%   column97: double (%f)
%	column98: double (%f)
%   column99: double (%f)
%	column100: double (%f)
%   column101: double (%f)
%	column102: double (%f)
%   column103: double (%f)
%	column104: double (%f)
%   column105: double (%f)
%	column106: double (%f)
%   column107: double (%f)
%	column108: double (%f)
%   column109: double (%f)
%	column110: double (%f)
%   column111: double (%f)
%	column112: double (%f)
%   column113: double (%f)
%	column114: double (%f)
%   column115: double (%f)
%	column116: double (%f)
%   column117: double (%f)
%	column118: double (%f)
%   column119: double (%f)
%	column120: double (%f)
%   column121: double (%f)
%	column122: double (%f)
%   column123: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%{yyyy-MM-dd}D%{HH:mm}D%C%C%C%C%C%C%C%C%C%C%C%C%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%C%C%C%C%C%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
teamBoxScore = table(dataArray{1:end-1}, 'VariableNames', {'gmDate','gmTime','seasTyp','offLNm1','offFNm1','offLNm2','offFNm2','offLNm3','offFNm3','teamAbbr','teamConf','teamDiv','teamLoc','teamRslt','teamMin','teamDayOff','teamPTS','teamAST','teamTO','teamSTL','teamBLK','teamPF','teamFGA','teamFGM','teamFG','team2PA','team2PM','team2P','team3PA','team3PM','team3P','teamFTA','teamFTM','teamFT','teamORB','teamDRB','teamTRB','teamPTS1','teamPTS2','teamPTS3','teamPTS4','teamPTS5','teamPTS6','teamPTS7','teamPTS8','teamTREB','teamASST','teamTS','teamEFG','teamOREB','teamDREB','teamTO1','teamSTL1','teamBLK1','teamBLKR','teamPPS','teamFIC','teamFIC40','teamOrtg','teamDrtg','teamEDiff','teamPlay','teamAR','teamASTTO','teamSTLTO','opptAbbr','opptConf','opptDiv','opptLoc','opptRslt','opptMin','opptDayOff','opptPTS','opptAST','opptTO','opptSTL','opptBLK','opptPF','opptFGA','opptFGM','opptFG','oppt2PA','oppt2PM','oppt2P','oppt3PA','oppt3PM','oppt3P','opptFTA','opptFTM','opptFT','opptORB','opptDRB','opptTRB','opptPTS1','opptPTS2','opptPTS3','opptPTS4','opptPTS5','opptPTS6','opptPTS7','opptPTS8','opptTREB','opptASST','opptTS','opptEFG','opptOREB','opptDREB','opptTO1','opptSTL1','opptBLK1','opptBLKR','opptPPS','opptFIC','opptFIC40','opptOrtg','opptDrtg','opptEDiff','opptPlay','opptAR','opptASTTO','opptSTLTO','poss','pace'});

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% teamBoxScore.gmDate=datenum(teamBoxScore.gmDate);
% teamBoxScore.gmTime=datenum(teamBoxScore.gmTime);

